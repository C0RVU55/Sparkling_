<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gym">
	
	<!-- 소유 체육관 리스트  -->
	<select id="gymnoSelectList" parameterType="Int" resultType="GymVo">
		<![CDATA[ 
			SELECT  gym_no,
					sell_no,
			        gym_name
			FROM gym
			where sell_no = #{sellNo}
			order by gym_no desc
		]]>
	</select>
	
	<!-- 소유 체육관 정보 리스트 -->
	<select id="gymSelectList" parameterType="Int" resultType="GymVo">
		<![CDATA[ 
			SELECT  gym_no,
			        sell_no,
			        gym_name,
			        gym_address,
			        gym_ph,
			        gym_time,
			        gym_notice,
			        gym_event,
					gym_date
			FROM gym
			where sell_no = #{sellNo}
			order by gym_no desc
		]]>
	</select>
	
	<!-- 체육관 정보 불러오기 -->
	<select id="gymSelectOne" parameterType="Int" resultType="GymVo">
		<![CDATA[ 
			SELECT  gym_no,
			        sell_no,
			        gym_name,
			        gym_address,
			        gym_ph,
			        gym_time,
			        gym_notice,
			        gym_event,
			        gym_date
			FROM gym
			where gym_no = #{gymNo}
		]]>
	</select>
	
	<!-- 최근 체육관 번호 불러오기 -->
	<select id="gymNoSelectOne" parameterType="Int" resultType="GymVo">
		<![CDATA[ 
			SELECT  rownum,
			        n.gym_no,
			        n.sell_no
			FROM (SELECT  gym_no,
			              sell_no
				  FROM gym
				  where sell_no=#{sell_no}
				  order by gym_no desc) n
			where rownum=1
		]]>
	</select>
	
	<!-- 체육관 등록 -->
	<insert id="gymInsert" parameterType="GymVo" >
		<selectKey keyProperty="gym_no" resultType="Int" order="BEFORE">
			select seq_gym_no.nextval from dual
		</selectKey>
		<![CDATA[ 
			insert into gym
			values(#{gym_no}, 
			       #{sell_no}, 
			       #{gym_name}, 
			       #{gym_address}, 
			       #{gym_ph}, 
			       #{gym_time}, 
			       #{gym_notice},
			       #{gym_event}, 
			       sysdate)
		]]>
	</insert>
	<insert id="bookingTest" parameterType="GymVo">
	<![CDATA[
	insert into booking
	values(SEQ_BOOKING_NO.nextval,#{gym_no},'2021-04-18','15:00','19:00',80000,'대기',sysdate)
	]]>
	
	</insert>
	
	<!-- 체육관 이미지 등록 -->
	<insert id="gimgInsert" parameterType="GymImgVo">
		<![CDATA[ 
		insert into gymimg
		values(seq_gymimg_no.nextval, 
		       #{gym_no}, 
		       #{gym_img_savename}, 
		       #{gym_img_name}, 
		       #{gym_img_type})
		]]>
	</insert>
	
	<!-- 체육관별로 편의시설 불러오기 -->
	<select id="conSelectList" parameterType="int" resultType="ConVo">
		<![CDATA[ 
			SELECT  con_no,
			        gym_no,
			        con_name,
			        con_state
			FROM convenience
			where gym_no = #{gymno}
		]]>
	</select>
	
	<!-- 편의시설 등록 -->
	<insert id="conInsert" parameterType="ConVo" >
		<![CDATA[ 
			insert into convenience
			values(seq_con_no.nextval, 
			       #{gym_no}, 
			       #{con_name}, 
			       0)
		]]>
	</insert>
	
	<!-- 편의시설 상태 변경 -->
	<update id="conUpdate" parameterType="ConVo">
		<![CDATA[ 
			update convenience
			set con_state = 1
			where gym_no = #{gym_no} 
			and con_name = #{con_name}
		]]>
	</update>
	
	<!-- 대관 등록 / 부킹번호 체육관번호 날짜 시작 종료 요금 상태 -->
	<insert id="bookInsert" parameterType="BookingVo">
		<![CDATA[ 
			insert into booking
			values(seq_booking_no.nextval, 
			       #{gym_no}, 
			       #{booking_date}, 
			       #{booking_start}, 
			       #{booking_end}, 
			       #{booking_price}, 
			       '대기', 
			       sysdate)
		]]>
	</insert>
	
	<!-- 대관 리스트 불러오기 -->
	<select id="bookSelectList" parameterType="int" resultType="BookingVo">
		<![CDATA[ 
			SELECT  booking_no,
			        gym_no,
			        booking_date,
			        booking_start,
			        booking_end,
			        booking_price,
			        booking_state,
			        booking_reg_date
			FROM booking
			where gym_no = #{gym_no}
			order by booking_date asc
		]]>
	</select>
	
	<!-- 대관 삭제 -->
	<delete id="bookDelete" parameterType="int">
		<![CDATA[ 
			delete from booking
			where booking_no=#{booking_no}
		]]>
	</delete>
	
	<!-- ///////////////////////////////////////////////////////// -->
	
	<!-- by영훈 체육관 리스트 셀렉트  + 페이징 21-04-17 -->
	
	<select id="selectListGym" parameterType="map" resultType="GymVo">
		<![CDATA[
		select rn.rown,
             rn.gym_no as gym_no,
             rn.sell_no as sell_no,
             rn.gym_name as gym_name,   
             rn.gym_address as gym_address,
             rn.gym_event as gym_event, 
             rn.avgPrice,
             rn.gym_img_savename as gymImgSavename,
             rn.gym_img_type as gymImgType     
      from(select rownum as rown,
                  r.gym_no,
                  r.sell_no,
                  r.gym_name ,   
                  r.gym_address,
                  r.gym_event, 
                  r.avgPrice,
                  r.gym_img_savename,
                  r.gym_img_type 
           from(select g.gym_no,
                       g.sell_no, 
                       g.gym_name,   
                       g.gym_address, 
                       g.gym_event,  
                       round(avg(b.booking_price),-3)as avgPrice,
                       y.gym_img_savename, 
                       y.gym_img_type 
                from gym g , booking b , (select g.gym_no,
                                                 i.gym_img_savename,
                                                 i.gym_img_type 
                                          from gymimg i,gym g 
                                          where i.gym_no = g.gym_no
                                          and i.gym_img_type = 'main') y
                where g.gym_no = b.gym_no
                and y.gym_no = g.gym_no
            ]]>		
			<if test="searchMatchVo.search != null and searchMatchVo.search != '' ">
				and (g.gym_address like '%'||#{searchMatchVo.search}||'%' or g.gym_name like '%'||#{searchMatchVo.search}||'%')
			</if>
			<![CDATA[
                group by g.gym_no,
                         g.gym_name, 
                         g.sell_no,
                         g.gym_address,
                         g.gym_event,
                         y.gym_img_savename,
                         y.gym_img_type 
                order by g.gym_no desc)r
           order by rownum asc)rn
      where rn.rown between #{startRnum} and #{endRnum}

		]]>		
	</select>
	
	<select id="selectGymCount" parameterType="searchMatchVo" resultType="int">
		<![CDATA[
            select count(*)
            from(select g.gym_no
                 from gym g , booking b , (select g.gym_no,
                                                  i.gym_img_savename,
                                                  i.gym_img_type 
                                           from gymimg i,gym g 
                                           where i.gym_no = g.gym_no
                                           and i.gym_img_type = 'main') y
                 where g.gym_no = b.gym_no
                 and y.gym_no = g.gym_no
            ]]>		
			<if test="search != null and search != '' ">
				 and (g.gym_address like '%'||#{search}||'%' or g.gym_name like '%'||#{search}||'%')
			</if>
			<![CDATA[
                 group by g.gym_no
                 order by g.gym_no desc)c		
		]]>
	</select>
	<select id="selectOneGym" parameterType="int" resultType="GymVo">
		<![CDATA[
			SELECT  gym_no,
			        sell_no,
			        gym_name,
			        gym_address,
			        gym_ph,
			        gym_time,
			        gym_notice,
			        gym_event,
			        gym_date
			FROM gym
			where gym_no = #{gymNo}		
		]]>
	</select>
	
	<!-- 대관 리스트 예약자 연결 -->
	<select id="selectBBuyUser" parameterType="int" resultType="BBuyVo">
		<![CDATA[
			 select u.user_name
			 from bbuy b , users u
			 where b.user_no = u.user_no
			 and b.booking_no = #{booking_no}
			 and b.b_buy_state = '결제완료'	
		]]>
	</select>
	
</mapper>